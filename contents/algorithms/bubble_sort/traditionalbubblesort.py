# -*- coding: utf-8 -*-
"""TraditionalBubbleSort.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17QWL9pYVDytj-dKFofanI2i2ZcelP73n
"""

def traditional_bubbleSort(arr):
    n = len(arr)
    pass_count = 0
    array_accesses = 0
    swaps = 0
    print(f"\nOriginal array: {arr}")

    # Loop to access each array element
    for i in range(n - 1):

        # Loop to compare adjacent elements
        for j in range(0, n - i - 1):
            array_accesses += 2  # For arr[j] and arr[j + 1]
            if arr[j] > arr[j + 1]:
                array_accesses += 2  # For the swap: arr[j], arr[j + 1] = ...
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
                swaps += 1

        # Print array after each outer loop iteration (each pass)
        pass_count += 1
        print(f"Pass {pass_count}: {arr}")

    print(f"\nTotal passes: {pass_count}")
    print(f"Total array accesses: {array_accesses}")
    print(f"Total swaps performed: {swaps}")

user_input = input("Enter numbers separated by spaces: ")
try:
    arr = [int(num) for num in user_input.split()]
    traditional_bubbleSort(arr)
except ValueError:
    print("Error: Please enter only numbers separated by spaces.")

# Sample Input 1: 54 23 87 12 35 76 41 9 63 30 5 48 97 18 26 69 84 3 15 60
# Sample Input 2: 1 2 3 4 37 12 48 25 6 19 50 10 39 20 33 26 15 41 2 44 30